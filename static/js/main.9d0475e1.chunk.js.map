{"version":3,"sources":["globals.ts","components/loading/index.tsx","index.tsx"],"names":["window","PIXI","require","p2","Phaser","Loading","url","timeout","redirect","redirectURL","location","pathname","setTimeout","href","Home","lazy","About","Faq","Success","Failure","NotFound","App","Fragment","fallback","from","to","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8JAEAA,OAAOC,KAAOC,EAAQ,IACtBF,OAAOG,GAAKD,EAAQ,IAGpBF,OAAOI,OAASF,EAAQ,I,WCgBTG,MAhBf,YAA2D,IAAxCC,EAAuC,EAAvCA,IAAuC,IAAlCC,eAAkC,MAAxB,IAAwB,EAAnBC,EAAmB,EAAnBA,SAC/BC,EAAcH,GAAG,qBAAkBN,OAAOU,SAASC,UAYzD,OAXmBH,IAAY,IAM7BI,YAAW,WACTZ,OAAOU,SAASG,KAAOJ,IACtBF,GAGE,gDCbHO,EAAOC,gBAAK,kBAAM,sDAClBC,EAAQD,gBAAK,kBAAM,gCACnBE,EAAMF,gBAAK,kBAAM,gCACjBG,EAAUH,gBAAK,kBAAM,iCACrBI,EAAUJ,gBAAK,kBAAM,gCACrBK,EAAWL,gBAAK,kBAAM,gCAEtBM,EAAM,kBACV,cAAC,IAAD,UACE,cAAC,IAAMC,SAAP,UACE,cAAC,WAAD,CAAUC,SAAU,cAAC,EAAD,IAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAUC,KAAK,QAAQC,GAAG,MAC1B,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWd,IACjC,cAAC,IAAD,CAAOa,KAAK,SAASC,UAAWZ,IAChC,cAAC,IAAD,CAAOW,KAAK,OAAOC,UAAWX,IAC9B,cAAC,IAAD,CAAOU,KAAK,WAAWC,UAAWV,IAClC,cAAC,IAAD,CAAOS,KAAK,WAAWC,UAAWT,IAClC,cAAC,IAAD,CAAOS,UAAWR,cAO5BS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9d0475e1.chunk.js","sourcesContent":["/* stylelint-disable */\n\nwindow.PIXI = require(\"phaser-ce/build/custom/pixi\");\nwindow.p2 = require(\"phaser-ce/build/custom/p2\");\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nwindow.Phaser = require(\"phaser-ce/build/custom/phaser-split\");\n\nexport {};\n","type Props = {\n  url?: string;\n  timeout?: number;\n  redirect?: boolean;\n};\n\nfunction Loading({ url, timeout = 600, redirect }: Props) {\n  const redirectURL = url || `/panel/?to=${window.location.pathname}`;\n  const doRedirect = redirect || false;\n\n  /**\n   * Do we want redirect with waiting\n   */\n  if (doRedirect) {\n    setTimeout(() => {\n      window.location.href = redirectURL;\n    }, timeout);\n  }\n\n  return <main>Loading ...</main>;\n}\n\nexport default Loading;\n","import React, { Suspense, lazy } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport \"./globals\";\n\nimport Loading from \"./components/loading\";\nconst Home = lazy(() => import(\"./pages/Home\"));\nconst About = lazy(() => import(\"./pages/About\"));\nconst Faq = lazy(() => import(\"./pages/Faq\"));\nconst Success = lazy(() => import(\"./pages/Order/Success\"));\nconst Failure = lazy(() => import(\"./pages/Order/Failure\"));\nconst NotFound = lazy(() => import(\"./pages/404\"));\n\nconst App = () => (\n  <HashRouter>\n    <React.Fragment>\n      <Suspense fallback={<Loading />}>\n        <Switch>\n          <Redirect from=\"/home\" to=\"/\" />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/faq\" component={Faq} />\n          <Route path=\"/success\" component={Success} />\n          <Route path=\"/failure\" component={Failure} />\n          <Route component={NotFound} />\n        </Switch>\n      </Suspense>\n    </React.Fragment>\n  </HashRouter>\n);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}